@page "/addCustomer"
@inject NavigationManager uriHelper
@inject IJSRuntime js
@using ModelsClass;
@using DBlibrary;
<div class="form-signin text-center w-50">
    <img class="mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
    <h1 class="h3 mb-3 font-weight-normal">Edit</h1>

    <label for="inputName" class="sr-only">Name</label>
    <input @bind-value="Name" type="text" id="inputEmail" class="form-control m-1" placeholder="Name" required autofocus>


    <label for="inputage" class="sr-only">age</label>
    <input @bind-value="age" type="number" id="inputEmail" class="form-control m-1" placeholder="age" required autofocus>

    <label for="inputschool" class="sr-only">school</label>
    <input @bind-value="school" type="text" id="inputEmail" class="form-control m-1" placeholder="school" required autofocus>

    <label for="inputgender" class="sr-only">gender</label>
    <input @bind-value="gender" type="text" id="inputEmail" class="form-control m-1" placeholder="gender" required autofocus>
    <button @onclick="Addid" class="btn btn-lg btn-primary btn-block m-1" type="submit">Add</button>
</div>




@code {
    [Parameter] public int id { get; set; }
    private string Name = "";
    private int age = 0;
    private string gender = "";
    private string school = "";
    private int Id;
    private students student;


    async Task Addid()
    {
        StudentsDB studentDB = new StudentsDB();
        student = new students();
        student.idstudents = Name;
        student.age = age;
        student.school = school;
        student.gender = gender;
        bool n = studentDB.Insert(student);
        if (n == true)
        {
            await js.InvokeVoidAsync("alert", $"Customer added!");
            uriHelper.NavigateTo("/");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"Customer wasn't added!");
            uriHelper.NavigateTo("/");
        }
    }
}